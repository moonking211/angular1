v1.0.0-alpha.5
--------------
This is the fifth (of many) alpha and is **NOT ready for production** yet, reportedly does not work in IE at all.

This alpha fixes a bunch of array and destroyStrategy bugs.

## Known issues
 - In Angular 1.5+ some odd behaviours can occur if refreshing a form with a flash of content experienced
   The digest cycle is getting stuck under some unknown conditions which is most likely related

## Changes

### Added
 - #612 Added 'required' class to allow appending to or highlighting content when a field is required
 - Added test case for onChange support for array type

### Fixed
- #563 copyValueTo doesn't work with arrays

v1.0.0-alpha.4
--------------
This is the fourth (of many) alpha and is **NOT ready for production** yet.

This alpha fixes a bunch of array and destroyStrategy bugs.

## Changes

### Fixed
 - #602 Custom validator's message not showing
 - #689 DestroyStrategy does not trigger when field no longer meets condition
 - #750 Removing an invalid array item doesn't work properly
 - #769 Model inside Array is not cleaned when Condition fails
 - #857 **Regression** boolean values only saving true to model
 - Fixes angular-schema-form-bootstrap#41 Place holder does not disappear even after a valid field is selected. Thanks to @ramakrij

v1.0.0-alpha.3
--------------
This alpha fixes a few bugs like the annoying "Invalid type, expected array" error when an array content is invalid.

## Changes

### Fixed
 - #595 empty properties in schema
 - Arrays update validity more consistently, removed Angular version specific code
 - Add-ons will now correctly display by the added type being passed to the core correctly
 - #625 Unstoppable "Invalid type, expected array" when form initialised with incorrect array content.
 - #633 #602 custom validator errors.
 - #558 Add check for schema property to prevent form generation failures when a checkbox is explicitly defined by a developer (and therefore does not have a schema property) by @vinceis1337 in #663

v1.0.0-alpha.2
--------------
There is only one change in this alpha that needs user testing and feedback, the long awaited and much desired support for $ref.

## Changes

### Added
 - $ref support for relative and local lookups based on [workaround example](https://github.com/json-schema-form/angular-schema-form/issues/69#issuecomment-176635926) provided by @AndreNel7

v1.0.0-alpha.1
--------------
## Changes

### Breaking
 - Some add-ons will not be working yet, if an add-on is updated to use the new function it *should* work again, but there is more work to do here to make the upgrade seamless before a **beta** can be released.
 - Decorators should be updated to use the `defineDecorator` syntax with builders prior to the 1.0.0 release.

### Added
 - **23 test cases** added to ASF and a further **30 test cases** to json-schema-form-core
 - Integration with **json-schema-form-core**, this is the main purpose of this release as we move as much code to plain Javascript es6+ as possible to re-use the code in an **Angular 2+** release
 - #596 arrayIndices allows access to the current path for conditions in pr #742
 - #560 All fields should now have classes, names and ids that match and can be used for easier test writing and scripting. The classes are provided with and without array indexes so they can be accessed as a group or individually, fixed in PR #578
 - #748 New key, include all undefined schema fields in the form that are not already added with `[ '...' ]`

### Fixes
 - Tests fixed and running
 - Travis builds fixed and running
 - #828 schemaFormValidate event doesn't trigger past v0.8.2
 - #680 Pristine option was not behaving in pr #771
 - Add support for templates with leading whitespaces in pr #725
 - Improve sfNewArray Directive's titleMapValues Binding in pr #705
 - #590 Problems with model binding when using nested Arrays in pr #672, #742
 - Pass optional form name when broadcast error in in PR #656
 - Fix for #121 to redraw with proper defaults in PR #647
 - Revalidate model after successful custom validation event broadcasted in PR #642
 - Fixed angular element children selector usage partially in PR #605
 - Allow broadcasting of the formName to validate in PR #589
 - Ensure key is set in fieldsets in PR #578

Special thanks to all the following people for their help in the last year preparing for the move to this version:
@AndreNel7 @apinnecke @blackmiaool @CatherineH @cepauskas @chargrove @donalmurtagh @edclements @elbunuelo @ErichBSchulz @jozefizso @illiano @kyse @LeonardoGentile @mathroc @plong0 @pvgnd @stanimoto @tisto @tomsowerby @zackbloom

Extra special thanks to @handrews @joelwkent @nicklasb for insight, ideas and support as we head toward version 1.0.0!

v0.8.13
-------
 * Bugfix copy the initial form default on form redraw @stanimoto
 * Bugfix for revalidating the model after custom validation event is broadcast @cepauskas
 * New event value. The form name is now passed in validate and error events @tomsowerby & @LeonardoGentile

v0.8.12
-------
 * Bugfix for `condition` builder. It had a typo that broke it.
 * Bugfix for `transclusion` builder.


v0.8.11
-------
 * Bugfix for checkboxes validation in the new builder.

v0.8.10
-------
 * Bugfix for checkboxes when model array is undefined.

v0.8.9
------
 * Bugfix for radios and radios-inline. Validation should now work.
 * Bugfix so model changes from outside the form trigger validation.
 * New global option `pristine`.  Sets if errors and success states
   should be visible when form field are `$pristine`. Default is `{errors: true, success: true}`

v0.8.8
------
 * Don't rely on documentFragment.children @davidlgj
 * Restored "template" type support with the builder. @davidlgj
 * Fixed defaults in array items. @davidlgj

v0.8.7
------
 * Moved common builder functions from angular-schema-form-bootstrap decorator. @davidlgj
 * Bugfx for the new builder. @davidlgj

v0.8.6
------
 * Removed left over console.timeEnd @davidlgj

v0.8.5
------
 * UMD wrapping for bootstrap-decorator, thanks @angelaharalson
 * label instead of h3 in array title, whic is more consistent. Thanks @prettymuchbryce
 * doc typos, thanks @zerofifteen
 * multipleOf validation message fix, thanks @leipert
 * infinite digest bugfix, thanks @israelshirk
 * minLength validation message bugfix, thanks @iamdarrenhall
 * bugfix for Angular 1.2 and arrays watching, thanks @davidlgj

v0.8.4
------
 * Reverted `trackBy`. Fixes #458, #462, #471


v0.8.3
------
 * "destroyStrategy" support, thanks @jbsaff! This means that `condition` can now remove values
   from the model when their fields are hidden.
 * Bugfix for global option propagation, thanks @golfmat1
 * `notitle` now works on fieldset as well, thanks @stramel
 * `trackBy` on selects, thanks @Fridus
 * update list variable when watching for array changes, thanks @lukebennet
 * doc changes for the "save to gist" feature, thanks @niklasb
 * validation error message mixups, thanks @leipert
 * ObjectPath, deps and browserify fixes, thanks @saller, @LoicMahieu, @thardyman, @davidlgj

v0.8.2
-------
 * Fix embarrassing typo in package.json

v0.8.1
------
 * Fixed order of error messages, thanks @davidlgj
 * Added `modelValue` to  variables available in a condition, thanks @dben
 * UMD wrapping, thanks @dwikle
 * disableErrorState, disableSuccessState options, thanks @domasx2
 * Awesome gist integration to example page, thanks @dervisevic
 * Global option to disable tv4 validation, thanks @maff
 * Option: labelHtmlClass, thanks @AlexAlbala
 * Doc fixes and updates, thanks @Minisai, @jdcaballerov, @cjroth, @dervisevic
 * Bugfixes, thanks @engelfrost, @mqamhieh, @carchrae


v0.8.0
------
Loads of stuff happened this release, so we're bumping version to 0.8.0.
Note as well that there is a small change to `tabsarray` type regarding its title, the title is now
interpolated instead of eval'd. So if you have any problems slap on a `{{ }}` around the tab title.
See the docs on `tabarray` for an more info.

 * Custom validation via ngModel.$validators and ngModel.$asyncValidators, thanks @davidlgj
 * Inject errors from backend directly to a field with events, thanks @davidlgj, @burdiuz, @jdgblinq
 * Icons to `button` type, thanks @maff
 * Fixed spoiled comment, thanks @mchapman
 * A new `template` field type, insert a angular template, like a mini add-on.
 * Support for schema type that allows null, thanks @ulion
 * Option groups in selects, thanks @DennisHalmstad
 * input group addons, thanks @quietlyconfident
 * validationMessages overhaul, nicer validationMessages with interpolation and a new sf-messages
   directive for add-on to use. thanks @davidlgj
 * interpolation instead of eval'ing in tabarray title, thanks @coridyn
 * Lots of bugfixes, most notable checkboxes validation now works, thanks @davidlgj, @coridyn,
   @ulion, @adamcbuckley

v0.7.13
-------
 * Bugfix for condition, it depended on jQuery

v0.7.12
-------
 * Error on deleteFromArray task, thanks @bygiro
 * Fix for copyValueTo on numeric fields, thanks @Anthropic
 * "condition" option on every form type, thanks @davidlgj
 * Force redraw "schemaFormRedraw", thanks @davidlgj
 * Possible fix for "updateOn exception", thanks @plong0

v0.7.11
-------
 * New front page with a list of add-on:s based on a bower search! Thanks @unicornforce @Dervisevic @davidlgj
 * Twitter account, @ngSchemaForm, new releases will be announced here. Thanks @Dervisevic
 * copyValueTo form option. Thanks @Dervisevic

v0.7.10
------
 * Accessability additions, thanks @stramel
 * Updates to the gulp tasks, thanks @stramel
 * Updated to bower, thanks @Dervisevic
 * Updates to documentation & README & Contributing.md, thanks @davidlgj @Dervisevic
 * Speed optimization, thanks @stramel
 * Call ngModel.$setDirty() when deleting from array, thanks @qstrahl
 * Don't override readonly if specified on items individually, thanks @qstrahl
 * Update to the examples, thanks @mike-marcacci

v0.7.9
------
* Fixed a wrongful glob in bower.json that caused files to be missing in the bower install. Thanks, @mohsen1 for reporting it.

v0.7.8
------
* Thanks to @burdiuz for finding a memory leak issue and finding a solution. And thanks to @davidlgj for implementing that solution.
* Post render event, thanks @mrijken
* Events documentation, thanks @Dervisevic
* startEmpty documentation, thanks @davidlj
* npm and bower updates, thanks @Dervisevic
* x-schema-form attribute, thanks @davidlgj
* htmlClass and fieldHtmlClass form options, thanks @davidlgj

v0.7.7
------
 * Array ref changes in model updates form, thanks @Sandreu
 * Tabarray & array fixes, thanks @Sandreu, @davidlgj
 * Use objectpath more generically to fix requirejs issues, thanks @mike-marcacci
 * README and documentation updates, thanks @davidlgj, @engelfrost, @Dervisevic, @stramel, @Sandreu
 * Expanded documentation on custom validation messages, thanks @Dervisevic
 * Deep structure tests, thanks @Sandreu
 * SF-insert-field documentation, thanks @davidlgj
 * Array model watch & array defaults, thanks @Sandreu

v0.7.6
------
 * Fixed broken bower specification.
 * Updated README and documentation.

v0.7.5
------
 * Bracket notation for reserved words to make IE8 happier,thanks @jibwa
 * Clarification of module loading in docs, thanks @CoderAjay

v0.7.4
------
 * bower.json fixes, thanks @mike-marcacci, @morrislaptop
 * Updated docs with a part on extending angular schema form.
 * The example now includes the tinymce add on (https://github.com/Textalk/angular-schema-form-tinymce)
 * @cameronprattedwards split the gulp tasks and tests into manageble files.
 * Fixed validation bugs with numbers and dates, this also got validation working in Angular 1.3.0
 * Placeholder on textarea
 * step="any" so a HTML5 input doesn't default to 1 and break float validation
 * Allow for a pre-existing layout where fields will be inserted, thanks @ebrehault
   Docs are missing but lock at PR #112.
 * Better "readonly" support, thanks @mike-marcacci!

v0.7.3
------
 * Fix for regression in enum order in selects, thanks @adamschwartz
 * Descriptons in fieldsets, thanks @mike-marcacci
 * Evaluate sfModel in the parent scope, thanks @mike-marcacci
 * 'defaultFormDefinition' is now exported on the schemaForm provider making it possible to create
   addons that have arbitrary forms inside them, i.e. like fieldset.
 * A couple of bugs, required should now work fine, tabarrays behave, list tags be mathed etc

v0.7.2
------
 * Add-ons now have their own repos, and there is a colorpicker!
 * 'arrayIndex' is exposed as a locals in conditionals
 * New tab in tabarrays gets focus.
 * We now follow google javscript code guidelines, policed by jscs.

v0.7.1
------
Thanks to @torstenrudolf, this release is basically his PR:s.
 * Bugfix: Array validation for Checkboxes
 * New radios type: 'radios-inline'
 * Class "control-label" added to labels

v0.7.0
------
 * Support for complex keys, at least when using Angular 1.3.
   See docs/knownlimitations.md for details. Thanks @mike-marcacci for that
   awesome PR.
 * New format for 'titleMap', it can now also take a list.
 * Checkboxes have proper two way binding.
 * Validate entire form with $scope.$broadcast('schemaFormValidate')
 * If there is no title in neither schema nor form it defaults to the property
   name from the schema.
 * 'sf-options' attribute for globals options, with an option for form defaults.
 * Added 'ng-model-options' so Angular 1.3 users can validate on blur.
 * All validation, even required is now using tv4js, change 'validationMessage'
   accordingly. This means arrays validate.
 * 'Checkbox' type implies a default of false if none is set.
 * Changed tactics when it comes to bower deps, it now only depends on what you
   cannot go without, i.e. tv4, angular, angular-sanitize and objectpath. You
   have to add bootstrap and other dependencies manually (a lot are optional).
 * Lots of small bugfixes.

 Thanks to @mike-marcacci, @sashless, @cameronprattedwards,@ianbeeston,
 @torstenrudolf and all of you who made a lot of issues and PR:s this summer!


v0.6.0
------
 * array and tabarray support, with help from @zackbloom (thanks!).
   Schema type array now translates to a list of objects, adding, removing
   and reordering supported. Form  type "tabarray" does the same but renders
   it as tabs instead (configurable to left, right or top)

v0.5.0
------
 * Travis and Coveralls integration
 * Support for HTML in descriptons and some titles, (checkbox(es), radios).
 * ngSanitize is now a dependency.
 * Enum order is now maintained in selects (thanks @adamschwartz)

v0.4.0
------
 * Create tabs with the 'tab' type, just for show!
 * Add arbitrary HTML with the 'help' type, just because you can.

v0.3.0
------
 * A shiny new datepicker using pickadate.js
 * Cleaned up documentation and added small installation instructions.

v0.2.0
------
 * postProcess function in schemaForm provider
 * New form option: Inline feedback icons in fields.
 * New form option: onChange a function or expression that triggers in the same
   way as ng-change.
 * Removed dependencies on jQuery (thanks @zackbloom and @tsing!)

v0.1.0
------
We're celebrating actual useful functionality by bumping minor version, yay!
 * ```radios``` and ```radiobuttons``` supports, works the same but looks different.
 * Added ```conditional``` type to hide/show parts of a form.
 * Bugfixes


v0.0.4
------
 * Fieldsets now properly merge schema defaults.
 * Directives for "manual" decorator usage.
 * Basic support for buttons.
 * Basic support for custom validation error messages.
